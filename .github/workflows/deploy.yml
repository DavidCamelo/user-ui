name: Docker Image CI / Kubernetes Deployment CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_TARGET_PLATFORM: linux/amd64,linux/arm64
      DOCKER_USERNAME: ${{secrets.DOCKER_USER}}
      REPO_NAME: ${{github.event.repository.name}}
      IMAGE_TAG: ${{github.ref_name}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Prepare
        if: success()
        id: prepare
        run: |
          echo "docker_platform=${DOCKER_TARGET_PLATFORM}" >> $GITHUB_OUTPUT
          echo "docker_image=${DOCKER_USERNAME}/${REPO_NAME}" >> $GITHUB_OUTPUT
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Docker build and push
        if: success()
        run: |
          docker login && \
          docker buildx build \
          --platform ${{steps.prepare.outputs.docker_platform}} \
          --tag ${{steps.prepare.outputs.docker_image}}:$IMAGE_TAG \
          --tag ${{steps.prepare.outputs.docker_image}}:$IMAGE_TAG-${{steps.prepare.outputs.sha_short}} \
          --push .
      - name: Kubernetes Config
        if: success()
        uses: Azure/k8s-set-context@v4
        with:
          kubeconfig: ${{secrets.KUBE_CONFIG}}
      - name: Kubernetes Deploy
        if: success()
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          namespace: spring-boot
          manifests: |
            kubernetes/deployment.yml
            kubernetes/service.yml
            kubernetes/ingress.yml
          images: |
            ${{steps.prepare.outputs.docker_image}}:${{github.ref_name}}-${{steps.prepare.outputs.sha_short}}